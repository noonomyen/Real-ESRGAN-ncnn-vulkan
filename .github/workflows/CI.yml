name: CI
on: [push, pull_request]

jobs:
  windows-x86_64:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: cache-vulkansdk
      id: cache-vulkansdk
      uses: actions/cache@v3
      with:
        path: "VulkanSDK"
        key: VulkanSDK-1.3.261.1-Installer
    - name: vulkansdk
      if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/1.3.261.1/windows/VulkanSDK-1.3.261.1-Installer.exe -OutFile VulkanSDK-1.3.261.1-Installer.exe
        7z x -aoa ./VulkanSDK-1.3.261.1-Installer.exe -oVulkanSDK
    - name: build
      run: |
        $env:VULKAN_SDK="$(pwd)/VulkanSDK"
        mkdir build; cd build
        cmake -A x64 ../src
        cmake --build . --config Release -j 2

  ubuntu-x86_64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: cache-vulkansdk
      id: cache-vulkansdk
      uses: actions/cache@v3
      with:
        path: "1.3.261.1"
        key: vulkansdk-linux-x86_64-1.3.261.1
    - name: vulkansdk
      if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
      run: |
        wget https://sdk.lunarg.com/sdk/download/1.3.261.1/linux/vulkansdk-linux-x86_64-1.3.261.1.tar.xz -O vulkansdk-linux-x86_64-1.3.261.1.tar.xz 
        tar -xf vulkansdk-linux-x86_64-1.3.261.1.tar.xz
    - name: build
      run: |
        export VULKAN_SDK=`pwd`/1.3.261.1/x86_64
        mkdir build && cd build
        cmake ../src
        cmake --build . -j 2

  android-aarch64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: cache-vulkansdk
      id: cache-vulkansdk
      uses: actions/cache@v3
      with:
        path: "1.3.261.1"
        key: vulkansdk-linux-x86_64-1.3.261.1
    - name: VulkanSDK
      if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
      run: |
        wget https://sdk.lunarg.com/sdk/download/1.3.261.1/linux/vulkansdk-linux-x86_64-1.3.261.1.tar.xz -O vulkansdk-linux-x86_64-1.3.261.1.tar.xz 
        tar -xf vulkansdk-linux-x86_64-1.3.261.1.tar.xz
    - name: cache-android-ndk
      id: cache-android-ndk
      uses: actions/cache@v3
      with:
        path: "android-ndk-r25c"
        key: android-ndk-r25c-linux
    - name: android-ndk
      if: steps.cache-android-ndk.outputs.cache-hit != 'true'
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip -O android-ndk-r25c-linux.zip
        unzip android-ndk-r25c-linux.zip
    - name: build
      run: |
        export VULKAN_SDK=`pwd`/1.3.261.1/x86_64
        mkdir build && cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=`pwd`/../android-ndk-r25c/build/cmake/android.toolchain.cmake -DANDROID_ABI="arm64-v8a" -DANDROID_PLATFORM=android-29 -DNCNN_VULKAN=ON -DOpenMP_LIBRARY=`pwd`/../android-ndk-r25c/toolchains/llvm/prebuilt/linux-x86_64/lib64/clang/14.0.7/lib/linux/aarch64/libomp.a ../src
        cmake --build . -j 2

  macos-x86_64:
    runs-on: macos-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: cache-vulkansdk
      id: cache-vulkansdk
      uses: actions/cache@v3
      with:
        path: "vulkansdk-macos-1.3.261.1"
        key: vulkansdk-macos-1.3.261.1
    - name: vulkansdk
      if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
      run: |
        wget https://sdk.lunarg.com/sdk/download/1.3.261.1/mac/vulkansdk-macos-1.3.261.1.dmg -O vulkansdk-macos-1.3.261.1.dmg
        hdiutil attach vulkansdk-macos-1.3.261.1.dmg
        mkdir vulkansdk-macos-1.3.261.1
        /Volumes/vulkansdk-macos-1.3.261.1/InstallVulkan.app/Contents/MacOS/InstallVulkan --root `pwd`/vulkansdk-macos-1.3.261.1 --accept-licenses --default-answer --confirm-command install
        hdiutil detach /Volumes/vulkansdk-macos-1.3.261.1
        find vulkansdk-macos-1.3.261.1 -type f | grep -v -E 'vulkan|glslang|MoltenVK' | xargs rm
    - name: build
      run: |
        export VULKAN_SDK=`pwd`/vulkansdk-macos-1.3.261.1/macOS
        mkdir build && cd build
        cmake -DUSE_STATIC_MOLTENVK=ON -DCMAKE_OSX_ARCHITECTURES="x86_64" \
            -DVulkan_INCLUDE_DIR=`pwd`/../vulkansdk-macos-1.3.261.1/MoltenVK/include \
            -DVulkan_LIBRARY=`pwd`/../vulkansdk-macos-1.3.261.1/MoltenVK/MoltenVK.xcframework/macos-arm64_x86_64/libMoltenVK.a \
            ../src
        cmake --build . -j 3

  macos-arm64:
    runs-on: macos-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: cache-vulkansdk
      id: cache-vulkansdk
      uses: actions/cache@v3
      with:
        path: "vulkansdk-macos-1.3.261.1"
        key: vulkansdk-macos-1.3.261.1
    - name: vulkansdk
      if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
      run: |
        wget https://sdk.lunarg.com/sdk/download/1.3.261.1/mac/vulkansdk-macos-1.3.261.1.dmg -O vulkansdk-macos-1.3.261.1.dmg
        hdiutil attach vulkansdk-macos-1.3.261.1.dmg
        mkdir vulkansdk-macos-1.3.261.1
        /Volumes/vulkansdk-macos-1.3.261.1/InstallVulkan.app/Contents/MacOS/InstallVulkan --root `pwd`/vulkansdk-macos-1.3.261.1 --accept-licenses --default-answer --confirm-command install
        hdiutil detach /Volumes/vulkansdk-macos-1.3.261.1
        find vulkansdk-macos-1.3.261.1 -type f | grep -v -E 'vulkan|glslang|MoltenVK' | xargs rm
    - name: build
      run: |
        export VULKAN_SDK=`pwd`/vulkansdk-macos-1.3.261.1/macOS
        mkdir build && cd build
        cmake -DUSE_STATIC_MOLTENVK=ON -DCMAKE_OSX_ARCHITECTURES="arm64" \
            -DVulkan_INCLUDE_DIR=`pwd`/../vulkansdk-macos-1.3.261.1/MoltenVK/include \
            -DVulkan_LIBRARY=`pwd`/../vulkansdk-macos-1.3.261.1/MoltenVK/MoltenVK.xcframework/macos-arm64_x86_64/libMoltenVK.a \
            ../src
        cmake --build . -j 3
